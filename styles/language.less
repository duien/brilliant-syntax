.comment {
  color: @syntax-color-comment;
  
  &.documentation {
    color: @teal-200;
  }

  .storage {
    color: @syntax-background-color;
    background: @purple-A400;
    font-weight: 600;
    border-radius: 2px;
    margin:  0 -2px 0 -3px;
    padding: 0  2px 0  3px;

    &.todo  { background: @teal-A400; }
    &.fixme { background: @deep-orange-A400; }
    &.note  { background: @amber-A400; }
  }
}

.keyword {
  color: @syntax-color-keyword;

  &.control {
    // color: @red;
    font-weight: 600;
  }

  &.operator {
    color: @syntax-color-punctuation;
  }

  &.other.special-method {
    // color: @blue;
  }

  &.other.unit {
    // based on '@syntax-color-constant' for number
    color: @light-blue-200;
    font-weight: 400;
  }
}

.storage {
  // color: @purple;
  color: @syntax-color-builtin;
}

.constant {
  color: @syntax-color-constant;

  &.character.escape {
    // color: @syntax-color-warning;
    color: @pink-400;
    font-weight: 600;
  }

  &.numeric {
    color: @syntax-color-numeric;
    font-weight: 600;
  }

  &.other.color {
    // color: @cyan;
  }

  &.other.symbol {
    // color: @green;
    color: @cyan-400;
    > .punctuation {
      color: @cyan-400;
    }
  }
}

.variable {
  color: @syntax-color-variable;
  &.punctuation.separator {
    color: @syntax-color-punctuation;
  }
  &.readwrite.js, &.other.object, &.property {
    color: @syntax-text-color;
  }
  &.language.this, &.anonymous {
    font-weight: 600;
  }

  &.interpolation {
    // color: darken(@red, 10%);
  }

  &.parameter.function {
    // color: @syntax-text-color;
  }
  
  &.constant {
    color: @syntax-color-constant;
  }
}

.invalid.illegal {
  background-color: @syntax-color-warning;
  color: @syntax-background-color;
  font-weight: 500;
}

.string {
  color: @syntax-color-string;
  // background: fade(@teal-50, 50%);
  background: @teal-50;

  &.punctuation {
    background: transparent;
  }

  &.regexp {
    color: @indigo-400;
    // background: fade(@cyan-50, 50%);
    background: @indigo-50;

    > .punctuation {
      color: @indigo-400;
      // color: @cyan-A400;
    }
    .source.ruby.embedded {
      // color: @orange;
      // color: @purple-400;
    }
  }
  
  .embedded .source {
    color: @syntax-text-color;
  }

  &.other.link {
    // color: @red;
  }
}

.punctuation {
  &.separator {
    // color: @syntax-text-color;
    // color: @purple-200;
    color: @syntax-color-punctuation;
  }
  
  &.definition {
    &.comment {
      // color: @syntax-color-comment;
    }

    &.tag {
      color: @purple-A200;
    }

    // &.string,
    // &.variable,
    // &.parameters,
    // &.array {
      // color: @syntax-text-color;
    // }

    &.heading,
    &.identity {
      // color: @blue;
    }

    &.bold {
      // color: @light-orange;
      font-weight: bold;
    }

    &.italic {
      // color: @purple;
      font-style: italic;
    }
  }

  // String interpolation
  &.section.embedded {
    color: @syntax-color-punctuation;
    font-weight: 600;

    // TODO Figure out how to handle syntax inside interpolation
  }

}

.support {
  &.class {
    // color: @light-orange;
    // color: @syntax-color-constant;
    color: @deep-orange-400;
  }

  &.function  {
    // color: @cyan;
    color: @syntax-color-builtin;

    &.any-method {
      // color: @blue;
    }
  }
}

.entity {
  &.name.function {
    // color: @blue;
    color: @syntax-color-function;
    font-weight: 600;
  }
  &.name.type {
    // color: @light-orange;
    // text-decoration: underline;
    color: @syntax-color-type;
    font-weight: 600;
  }

  &.other.inherited-class {
    // color: @green;
    color: @syntax-color-constant;
    font-weight: 400;
  }
  &.name.class, &.name.type.class {
    // color: @light-orange;
  }

  &.name.section {
    // color: @blue;
  }

  &.name.tag {
    // color: @red;
    // text-decoration: underline;
    color: @purple-A200;

    &.class {
      color: @syntax-color-constant;
    }

    &.id {
      color: @syntax-color-numeric;
    }
  }

  // TODO This duplication makes me sad
  &.class {
    color: @syntax-color-constant;
  }

  &.id {
    color: @syntax-color-numeric;
  }

  &.other.attribute-name {
    // color: @orange;

    &.id {
      // color: @blue;
    }
  }
}

.meta {
  &.class {
    // color: @light-orange;
  }

  &.link {
    // color: @orange;
  }

  &.require {
    // color: @blue;
  }

  &.selector {
    // color: @purple;
  }

  &.separator {
    // background-color: @gray;
    // color: @syntax-text-color;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    // color: @orange;
    font-weight: bold;
  }

  &.changed {
    color: @syntax-color-renamed;
  }

  &.deleted {
    color: @syntax-color-removed;
  }

  &.italic {
    // color: @purple;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    // color: @blue;
  }

  &.inserted {
    color: @syntax-color-added;
  }

  &.list {
    // color: @red;
  }

  &.quote {
    // color: @orange;
  }

  &.raw.inline {
    // color: @green;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    // color: @green;
  }
}
